:root {
    --x-color: #2080f9;
    --o-color: #e4624a;
}

body {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.container {
    padding: 30px 60px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
}

.container h1 {
    text-align: center;
}

.message {
    font-size: 2.5rem;
}

.message .xo {
    font-weight: bold;
}

.game-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 30px;
}

.board {
    position: relative;
    display: grid;
    grid-template-columns: repeat(3, 115px);
    grid-auto-rows: 115px;
}

.board>.cell {
    position: relative;
    cursor: pointer;
    padding: 15px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 5rem;
    line-height: 1;
    font-weight: bold;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}

.board>.cell:not(:nth-child(3n)) {
    border-right: 3px solid black;
}

.board>.cell:not(:nth-last-child(-n + 3)) {
    border-bottom: 3px solid black;
}

[data-value="✕"] {
    color: var(--x-color);
}

[data-value="◯"] {
    color: var(--o-color);
}

.board>.cell>.xo {
    opacity: 0;
    transition: opacity 0.1s ease;
}

.board>.cell.marked>.xo {
    opacity: 1;
}

.board>.cell::after {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.board>.cell:not(.marked):hover::after {
    opacity: 0.25;
}

.board>.cell.marked[data-value="✕"]::after,
[data-turn="✕"] .board>.cell:not(.marked):hover::after,
[data-turn="✕"]:not([data-state="◯"]) .message::after,
[data-state="✕"] .message::after {
    content: "✕";
    color: var(--x-color);
}
    
.board>.cell.marked[data-value="◯"]::after,
[data-turn="◯"] .board>.cell:not(.marked):hover::after,
[data-turn="◯"]:not([data-state="✕"]) .message::after,
[data-state="◯"] .message::after {
    content: "◯";
    color: var(--o-color);
}

[data-state="draw"] .message::after {
    content: "" !important;
}

[data-state="draw"] .board {
    pointer-events: none;
}